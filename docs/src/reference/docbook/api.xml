<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="apis" xmlns:xlink="http://www.w3.org/1999/xlink">
	<title>Gowalla API Binding</title>
	
	<para>
		Spring Social Gowalla provides an API binding to Gowalla's REST API through the <interfacename>Gowalla</interfacename> interface and its implementation, <classname>GowallaTemplate</classname>.
	</para>
	
	<para>
		To obtain an instance of <classname>GowallaTemplate</classname>, you can instantiate it by passing an authorized access token to its constructor:
	</para>
		
	<programlisting language="java"><![CDATA[
String accessToken = "f8FX29g..."; // access token received from Gowalla after OAuth authorization
Gowalla gowalla = new GowallaTemplate(accessToken);]]>
	</programlisting>
		
	<para>
		If you are using Spring Social's <ulink url="https://docs.spring.io/spring-social/docs/1.0.x/reference/html/serviceprovider.html">service provider framework</ulink>, you can get an instance of <interfacename>Gowalla</interfacename> via a <interfacename>Connection</interfacename>. 
		For example, the following snippet calls <methodname>getApi()</methodname> on a connection to retrieve a <interfacename>Gowalla</interfacename>:
	</para>				
	
	<programlisting language="java"><![CDATA[
Connection<Gowalla> connection = connectionRepository.findPrimaryConnection(Gowalla.class);
if (connection != null) {
    Gowalla gowalla = connection.getApi();

    // ... use GitHub API binding
}]]>
	</programlisting>
		
	<para>
		Here, <interfacename>ConnectionRepository</interfacename> is being asked for the primary connection that the current user has with Gowalla.
		If a connection to Gowalla is found, it retrieves a <interfacename>Gowalla</interfacename> instance that is configured with the connection details received when the connection was first established.
	</para>
	
	<para>
		With a <interfacename>Gowalla</interfacename> in hand, there are a handful of operations it provides to interact with Gowalla on behalf of the user. 
		These will be covered in the following sections.
	</para>

	<section id="gowalla-getProfile">
		<title>Retrieving a user's profile data</title>
		
		<para>
			You can retrieve a user's Gowalla profile using the <methodname>getUserProfile()</methodname> method:
		</para>
		
		<programlisting language="java"><![CDATA[
GowallaProfile profile = gowalla.getUserProfile();]]>
		</programlisting>
			
		<para>
			This will return the Gowalla profile data for the authenticated user. 
			If you want to retrieve profile data for another user, you can pass the user's profile ID into <methodname>getUserProfile()</methodname>:
		</para>
		
		<programlisting language="java"><![CDATA[
GowallaProfile profile = gowalla.getUserProfile("habuma");]]>
		</programlisting>
		
		<para>
			The <classname>GowallaProfile</classname> object contains basic information about the Gowalla user such as their first and last names, their hometown, and the number of pins and stamps that they have earned.
		</para>
		
		<para>
			If all you want is the authenticated user's profile ID, you can get that by calling the <methodname>getProfileId()</methodname>:
		</para>
		
		<programlisting language="java"><![CDATA[
String profileId = gowalla.getProfileId();]]>
		</programlisting>
		
		<para>
			Or if you want the URL to the user's profile page at Gowalla, use the <methodname>getProfileUrl()</methodname> method:
		</para>
		
		<programlisting language="java"><![CDATA[
String profileUrl = gowalla.getProfileUrl();]]>
		</programlisting>

	</section>

	<section id="gowalla-checkins">
		<title>Getting a user's checkins</title>
		
		<para>
			<interfacename>Gowalla</interfacename> also allows you to learn about the user's favorite checkin spots. 
			The <methodname>getTopCheckins()</methodname> method will provide a list of the top 10 places that the user has visited:
		</para>
		
		<programlisting language="java"><![CDATA[
List<Checkin> topCheckins = gowalla.getTopCheckins();]]>
		</programlisting>
		
		<para>
			Each member of the returns list is a <classname>Checkin</classname> object that includes the name of the location as well as the number of times that the user has checked in at that location.
		</para>
	</section>
</chapter>